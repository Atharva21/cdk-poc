# This is a basic workflow to help you get started with Actions

name: Build and deploy to AWS

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [main]
  pull_request:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout repository
        uses: actions/checkout@v2

      # Installs Pipfile Dependencies
      - name: Build
        run: |
          sudo pip install pipenv
          pipenv install

      # Runs pytest
      - name: Test
        run: pipenv run python3 -m pytest ./src

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name != 'pull_request'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      # Package
      - name: Package lambda layer
        run: |
          sudo pip install pipenv
          pipenv install
          pipenv run pip freeze > requirements.txt
          mkdir python
          cd ./python/
          pip install -r ../requirements.txt -t ./
          cd ..
          zip -r python.zip python

      - name: Configure aws credentials
        uses: aws-actions/configure-aws-credentials@master
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Install Node
        uses: actions/setup-node@v2
        with:
          node-version: "14"

      - name: Install CDK
        run: yarn --cwd ./deploy/ install

      - name: Test deployment
        run: yarn --cwd ./deploy/ test

      - name: CDK Synth
        run: yarn --cwd ./deploy/ cdk synth

      - name: CDK Diff
        run: yarn --cwd ./deploy/ cdk diff

      - name: CDK Bootstrap
        run: yarn --cwd ./deploy/ cdk bootstrap

      - name: Create artifact directory
        run: mkdir -p artifact

      - name: Deploy stack
        run: yarn --cwd ./deploy/ cdk deploy --outputs-file artifact/cdk-outputs.json --require-approval never
